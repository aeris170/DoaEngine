<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="1123px" preserveAspectRatio="none" style="width:202px;height:1123px;" version="1.1" viewBox="0 0 202 1123" width="202px" zoomAndPan="magnify"><defs><filter height="300%" id="f10mdakbhnvrom" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--MD5=[8dc6bd9e5f204c69b69cf76a3c0edbc1]
class doa.engine.log.Logger--><a href="Logger.html" target="_top" title="Logger.html" xlink:actuate="onRequest" xlink:href="Logger.html" xlink:show="new" xlink:title="Logger.html" xlink:type="simple"><rect codeLine="5" fill="#FEFECE" filter="url(#f10mdakbhnvrom)" height="1085.8828" id="doa.engine.log.Logger" style="stroke: #A80036; stroke-width: 1.5;" width="165" x="12.5" y="7"/><ellipse cx="54.95" cy="27.0938" fill="#B4A7E5" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M55.9031,23.7344 L55.9031,30.3906 L57.6219,30.3906 Q58.2313,30.3906 58.4969,30.625 Q58.7625,30.8594 58.7625,31.25 Q58.7625,31.625 58.4969,31.8594 Q58.2313,32.0938 57.6219,32.0938 L52.4813,32.0938 Q51.8719,32.0938 51.6063,31.8594 Q51.3406,31.625 51.3406,31.2344 Q51.3406,30.8594 51.6063,30.625 Q51.8719,30.3906 52.4813,30.3906 L54.2,30.3906 L54.2,23.7344 L52.4813,23.7344 Q51.8719,23.7344 51.6063,23.5 Q51.3406,23.2656 51.3406,22.875 Q51.3406,22.5 51.6063,22.2656 Q51.8719,22.0313 52.4813,22.0313 L57.6219,22.0313 Q58.2313,22.0313 58.4969,22.2656 Q58.7625,22.5 58.7625,22.875 Q58.7625,23.2656 58.4969,23.5 Q58.2313,23.7344 57.6219,23.7344 L55.9031,23.7344 Z "/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="45" x="88.55" y="26.5332">Logger</text><text fill="#000000" font-family="sans-serif" font-size="10" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="72" x="75.05" y="39.9902">doa.engine.log</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="13.5" x2="176.5" y1="47.1875" y2="47.1875"/><ellipse cx="23.5" cy="58.1875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="119" x="32.5" y="62.6064">setLevel(LogLevel): void</text><ellipse cx="23.5" cy="72.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="110" x="32.5" y="76.4424">setTarget(String): void</text><ellipse cx="23.5" cy="85.8594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="139" x="32.5" y="90.2783">log(LogLevel, boolean): void</text><ellipse cx="23.5" cy="99.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="121" x="32.5" y="104.1143">log(LogLevel, char): void</text><ellipse cx="23.5" cy="113.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="127" x="32.5" y="117.9502">log(LogLevel, char[]): void</text><ellipse cx="23.5" cy="127.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="133" x="32.5" y="131.7861">log(LogLevel, double): void</text><ellipse cx="23.5" cy="141.2031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="120" x="32.5" y="145.6221">log(LogLevel, float): void</text><ellipse cx="23.5" cy="155.0391" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="111" x="32.5" y="159.458">log(LogLevel, int): void</text><ellipse cx="23.5" cy="168.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="120" x="32.5" y="173.2939">log(LogLevel, long): void</text><ellipse cx="23.5" cy="182.7109" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="133" x="32.5" y="187.1299">log(LogLevel, Object): void</text><ellipse cx="23.5" cy="196.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="128" x="32.5" y="200.9658">log(LogLevel, String): void</text><ellipse cx="23.5" cy="210.3828" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="101" x="32.5" y="214.8018">finest(boolean): void</text><ellipse cx="23.5" cy="224.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="83" x="32.5" y="228.6377">finest(char): void</text><ellipse cx="23.5" cy="238.0547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="89" x="32.5" y="242.4736">finest(char[]): void</text><ellipse cx="23.5" cy="251.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="95" x="32.5" y="256.3096">finest(double): void</text><ellipse cx="23.5" cy="265.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="82" x="32.5" y="270.1455">finest(float): void</text><ellipse cx="23.5" cy="279.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="73" x="32.5" y="283.9814">finest(int): void</text><ellipse cx="23.5" cy="293.3984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="82" x="32.5" y="297.8174">finest(long): void</text><ellipse cx="23.5" cy="307.2344" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="95" x="32.5" y="311.6533">finest(Object): void</text><ellipse cx="23.5" cy="321.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="90" x="32.5" y="325.4893">finest(String): void</text><ellipse cx="23.5" cy="334.9063" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="96" x="32.5" y="339.3252">finer(boolean): void</text><ellipse cx="23.5" cy="348.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="78" x="32.5" y="353.1611">finer(char): void</text><ellipse cx="23.5" cy="362.5781" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="84" x="32.5" y="366.9971">finer(char[]): void</text><ellipse cx="23.5" cy="376.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="90" x="32.5" y="380.833">finer(double): void</text><ellipse cx="23.5" cy="390.25" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="77" x="32.5" y="394.6689">finer(float): void</text><ellipse cx="23.5" cy="404.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="68" x="32.5" y="408.5049">finer(int): void</text><ellipse cx="23.5" cy="417.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="77" x="32.5" y="422.3408">finer(long): void</text><ellipse cx="23.5" cy="431.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="90" x="32.5" y="436.1768">finer(Object): void</text><ellipse cx="23.5" cy="445.5938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="85" x="32.5" y="450.0127">finer(String): void</text><ellipse cx="23.5" cy="459.4297" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="92" x="32.5" y="463.8486">fine(boolean): void</text><ellipse cx="23.5" cy="473.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="74" x="32.5" y="477.6846">fine(char): void</text><ellipse cx="23.5" cy="487.1016" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="80" x="32.5" y="491.5205">fine(char[]): void</text><ellipse cx="23.5" cy="500.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="86" x="32.5" y="505.3564">fine(double): void</text><ellipse cx="23.5" cy="514.7734" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="73" x="32.5" y="519.1924">fine(float): void</text><ellipse cx="23.5" cy="528.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="64" x="32.5" y="533.0283">fine(int): void</text><ellipse cx="23.5" cy="542.4453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="73" x="32.5" y="546.8643">fine(long): void</text><ellipse cx="23.5" cy="556.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="86" x="32.5" y="560.7002">fine(Object): void</text><ellipse cx="23.5" cy="570.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="81" x="32.5" y="574.5361">fine(String): void</text><ellipse cx="23.5" cy="583.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="104" x="32.5" y="588.3721">config(boolean): void</text><ellipse cx="23.5" cy="597.7891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="86" x="32.5" y="602.208">config(char): void</text><ellipse cx="23.5" cy="611.625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="92" x="32.5" y="616.0439">config(char[]): void</text><ellipse cx="23.5" cy="625.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="98" x="32.5" y="629.8799">config(double): void</text><ellipse cx="23.5" cy="639.2969" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="85" x="32.5" y="643.7158">config(float): void</text><ellipse cx="23.5" cy="653.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="76" x="32.5" y="657.5518">config(int): void</text><ellipse cx="23.5" cy="666.9688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="85" x="32.5" y="671.3877">config(long): void</text><ellipse cx="23.5" cy="680.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="98" x="32.5" y="685.2236">config(Object): void</text><ellipse cx="23.5" cy="694.6406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="93" x="32.5" y="699.0596">config(String): void</text><ellipse cx="23.5" cy="708.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="92" x="32.5" y="712.8955">info(boolean): void</text><ellipse cx="23.5" cy="722.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="74" x="32.5" y="726.7314">info(char): void</text><ellipse cx="23.5" cy="736.1484" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="80" x="32.5" y="740.5674">info(char[]): void</text><ellipse cx="23.5" cy="749.9844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="86" x="32.5" y="754.4033">info(double): void</text><ellipse cx="23.5" cy="763.8203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="73" x="32.5" y="768.2393">info(float): void</text><ellipse cx="23.5" cy="777.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="64" x="32.5" y="782.0752">info(int): void</text><ellipse cx="23.5" cy="791.4922" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="73" x="32.5" y="795.9111">info(long): void</text><ellipse cx="23.5" cy="805.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="86" x="32.5" y="809.7471">info(Object): void</text><ellipse cx="23.5" cy="819.1641" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="81" x="32.5" y="823.583">info(String): void</text><ellipse cx="23.5" cy="833" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="112" x="32.5" y="837.4189">warning(boolean): void</text><ellipse cx="23.5" cy="846.8359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="94" x="32.5" y="851.2549">warning(char): void</text><ellipse cx="23.5" cy="860.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="100" x="32.5" y="865.0908">warning(char[]): void</text><ellipse cx="23.5" cy="874.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="106" x="32.5" y="878.9268">warning(double): void</text><ellipse cx="23.5" cy="888.3438" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="93" x="32.5" y="892.7627">warning(float): void</text><ellipse cx="23.5" cy="902.1797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="84" x="32.5" y="906.5986">warning(int): void</text><ellipse cx="23.5" cy="916.0156" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="93" x="32.5" y="920.4346">warning(long): void</text><ellipse cx="23.5" cy="929.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="106" x="32.5" y="934.2705">warning(Object): void</text><ellipse cx="23.5" cy="943.6875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="101" x="32.5" y="948.1064">warning(String): void</text><ellipse cx="23.5" cy="957.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="107" x="32.5" y="961.9424">severe(boolean): void</text><ellipse cx="23.5" cy="971.3594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="89" x="32.5" y="975.7783">severe(char): void</text><ellipse cx="23.5" cy="985.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="95" x="32.5" y="989.6143">severe(char[]): void</text><ellipse cx="23.5" cy="999.0313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="101" x="32.5" y="1003.4502">severe(double): void</text><ellipse cx="23.5" cy="1012.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="88" x="32.5" y="1017.2861">severe(float): void</text><ellipse cx="23.5" cy="1026.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="79" x="32.5" y="1031.1221">severe(int): void</text><ellipse cx="23.5" cy="1040.5391" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="88" x="32.5" y="1044.958">severe(long): void</text><ellipse cx="23.5" cy="1054.375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="101" x="32.5" y="1058.7939">severe(Object): void</text><ellipse cx="23.5" cy="1068.2109" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="96" x="32.5" y="1072.6299">severe(String): void</text><ellipse cx="23.5" cy="1082.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="74" x="32.5" y="1086.4658">newLine(): void</text></a><text fill="#888888" font-family="sans-serif" font-size="10" lengthAdjust="spacingAndGlyphs" textLength="190" x="0" y="1110.2637">UMLDoclet 2.0.12, PlantUML 1.2020.16</text><!--MD5=[dbb8cb9b754ebde0aea2df7150d2b85e]
@startuml
    set namespaceSeparator none
    hide empty fields
    hide empty methods

    interface "<size:14>Logger\n<size:10>doa.engine.log" as doa.engine.log.Logger [[Logger.html]] {
        {abstract} +setLevel(LogLevel): void
        {abstract} +setTarget(String): void
        {abstract} +log(LogLevel, boolean): void
        {abstract} +log(LogLevel, char): void
        {abstract} +log(LogLevel, char[]): void
        {abstract} +log(LogLevel, double): void
        {abstract} +log(LogLevel, float): void
        {abstract} +log(LogLevel, int): void
        {abstract} +log(LogLevel, long): void
        {abstract} +log(LogLevel, Object): void
        {abstract} +log(LogLevel, String): void
        {abstract} +finest(boolean): void
        {abstract} +finest(char): void
        {abstract} +finest(char[]): void
        {abstract} +finest(double): void
        {abstract} +finest(float): void
        {abstract} +finest(int): void
        {abstract} +finest(long): void
        {abstract} +finest(Object): void
        {abstract} +finest(String): void
        {abstract} +finer(boolean): void
        {abstract} +finer(char): void
        {abstract} +finer(char[]): void
        {abstract} +finer(double): void
        {abstract} +finer(float): void
        {abstract} +finer(int): void
        {abstract} +finer(long): void
        {abstract} +finer(Object): void
        {abstract} +finer(String): void
        {abstract} +fine(boolean): void
        {abstract} +fine(char): void
        {abstract} +fine(char[]): void
        {abstract} +fine(double): void
        {abstract} +fine(float): void
        {abstract} +fine(int): void
        {abstract} +fine(long): void
        {abstract} +fine(Object): void
        {abstract} +fine(String): void
        {abstract} +config(boolean): void
        {abstract} +config(char): void
        {abstract} +config(char[]): void
        {abstract} +config(double): void
        {abstract} +config(float): void
        {abstract} +config(int): void
        {abstract} +config(long): void
        {abstract} +config(Object): void
        {abstract} +config(String): void
        {abstract} +info(boolean): void
        {abstract} +info(char): void
        {abstract} +info(char[]): void
        {abstract} +info(double): void
        {abstract} +info(float): void
        {abstract} +info(int): void
        {abstract} +info(long): void
        {abstract} +info(Object): void
        {abstract} +info(String): void
        {abstract} +warning(boolean): void
        {abstract} +warning(char): void
        {abstract} +warning(char[]): void
        {abstract} +warning(double): void
        {abstract} +warning(float): void
        {abstract} +warning(int): void
        {abstract} +warning(long): void
        {abstract} +warning(Object): void
        {abstract} +warning(String): void
        {abstract} +severe(boolean): void
        {abstract} +severe(char): void
        {abstract} +severe(char[]): void
        {abstract} +severe(double): void
        {abstract} +severe(float): void
        {abstract} +severe(int): void
        {abstract} +severe(long): void
        {abstract} +severe(Object): void
        {abstract} +severe(String): void
        {abstract} +newLine(): void
    }

    center footer UMLDoclet 2.0.12, PlantUML 1.2020.16
@enduml

PlantUML version 1.2020.16(Sun Aug 23 23:20:43 TRT 2020)
(APACHE source distribution)
Java Runtime: Java(TM) SE Runtime Environment
JVM: Java HotSpot(TM) 64-Bit Server VM
Default Encoding: Cp1254
Language: en
Country: US
--></g></svg>