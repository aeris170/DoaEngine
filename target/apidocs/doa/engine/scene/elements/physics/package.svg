<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="245px" preserveAspectRatio="none" style="width:275px;height:245px;background:#000000;" version="1.1" viewBox="0 0 275 245" width="275px" zoomAndPan="magnify"><defs/><g><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="140" x="5" y="19">Dot Executable: null</text><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="173" x="5" y="36.6094">No dot executable found</text><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="258" x="5" y="54.2188">Cannot find Graphviz. You should try</text><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="0" x="9" y="71.8281"/><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="71" x="5" y="89.4375">@startuml</text><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="50" x="5" y="107.0469">testdot</text><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="66" x="5" y="124.6563">@enduml</text><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="0" x="9" y="142.2656"/><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="15" x="9" y="159.875">or</text><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="0" x="9" y="177.4844"/><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="201" x="5" y="195.0938">java -jar plantuml.jar -testdot</text><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="0" x="9" y="212.7031"/><text fill="#888888" font-family="sans-serif" font-size="10" lengthAdjust="spacingAndGlyphs" textLength="190" x="39" y="231.6934">UMLDoclet 2.0.12, PlantUML 1.2020.16</text><!--MD5=[08ba4d6177cc7958c0690896d96c409d]
@startuml
    namespace doa.engine.scene.elements.physics {

        class DoaArbitraryShapeCollider [[DoaArbitraryShapeCollider.html]] {
            #points: ArrayList<DoaVector>
            +DoaArbitraryShapeCollider(ArrayList<DoaVector>)
            +getPoints(): List<DoaVector>
        }

        enum DoaBodyType [[DoaBodyType.html]] {
            {static} +STATIC
            {static} +DYNAMIC
            {static} +KINEMATIC
        }

        class DoaBoxCollider [[DoaBoxCollider.html]] {
            +DoaBoxCollider(DoaVector)
            +DoaBoxCollider(DoaVector, DoaVector)
            +getDimensions(): DoaVector
            +getOffset(): DoaVector
            +getPoints(): List<DoaVector>
            +debugRender(): void
        }

        class DoaCircleCollider [[DoaCircleCollider.html]] {
            +DoaCircleCollider(float)
            +DoaCircleCollider(float, DoaVector)
            +getRadius(): float
            +getOffset(): DoaVector
            +getPoints(): List<DoaVector>
            +debugRender(): void
        }

        abstract class DoaCollider [[DoaCollider.html]] {
            #isTrigger: boolean
            #group: int
            {abstract} +getPoints(): List<DoaVector>
            +makeTrigger(): DoaCollider
            +makeNonTrigger(): DoaCollider
            +isTrigger(): boolean
            +group(int): DoaCollider
            +getGroup(): int
            +onTriggerEnter(DoaObject, DoaObject): void
            +onTriggerExit(DoaObject, DoaObject): void
            +debugRender(): void
        }

        class DoaEllipseCollider [[DoaEllipseCollider.html]] {
            #majorAxis: float
            #minorAxis: float
            +DoaEllipseCollider(float, float)
            +DoaEllipseCollider(float, float, DoaVector)
        }

        class DoaRigidBody [[DoaRigidBody.html]] {
            +linearVelocity: DoaVector
            +angularVelocity: float
            +linearDampening: float
            +angularDampening: float
            +mass: float
            +friction: float
            +elasticity: float
            +fixedRotation: boolean
            +isBullet: boolean
            +canSleep: boolean
            +setLinearVelocity(DoaVector): void
            +getLinearVelocity(): DoaVector
            +setAngularVelocity(float): void
            +getAngularVelocity(): float
            +setTransform(DoaTransform): void
            +getTransform(): DoaTransform
            +applyForce(DoaVector, DoaVector): void
            +applyForceToCenter(DoaVector): void
            +applyTorque(float): void
            +applyLinearImpulse(DoaVector, DoaVector): void
            +applyAngularImpulse(float): void
            +tick(): void
            #onAdd(DoaObject): void
            #onRemove(DoaObject): void
            +setNativeBody(Body): void
            +getNativeBody(): Body
        }

        DoaCollider <|- - DoaArbitraryShapeCollider
        DoaCollider <|- - DoaBoxCollider
        DoaCollider <|- - DoaCircleCollider
        java.io.Serializable <|.. DoaCollider
        DoaArbitraryShapeCollider <|- - DoaEllipseCollider
        doa.engine.scene.DoaComponent <|- - DoaRigidBody
        DoaRigidBody - -> DoaBodyType: type
        DoaRigidBody - -> "*" DoaCollider: colliders
    }

    namespace java.io {
        interface Serializable
    }

    namespace doa.engine.scene {
        abstract class DoaComponent [[..\..\DoaComponent.html]] {
            #isEnabled: boolean
            +name: String
            +debugRender: boolean
        }
    }

    center footer UMLDoclet 2.0.12, PlantUML 1.2020.16
@enduml

PlantUML version 1.2020.16(Sun Aug 23 23:20:43 TRT 2020)
(APACHE source distribution)
Java Runtime: Java(TM) SE Runtime Environment
JVM: Java HotSpot(TM) 64-Bit Server VM
Default Encoding: Cp1254
Language: en
Country: US
--></g></svg>